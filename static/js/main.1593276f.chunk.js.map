{"version":3,"sources":["MovieRow.js","components/DropdownSelect.js","App.js","serviceWorker.js","index.js"],"names":["MovieRow","props","state","overlayText","console","log","movietitle","this","movie","title","settings","newOverlayText","$","ajax","done","response","results","length","locations","display_name","i","concat","setState","bind","key","id","alt","width","src","poster_src","className","style","textAlign","align","overview","OverlayTrigger","trigger","placement","backgroundColor","overlay","Popover","color","opacity","Title","as","Content","Button","variant","float","onClick","setOverlayContent","React","Component","DropdownSelect","event","searchTerm","performSearch","Container","fluid","DropdownButton","Row","Dropdown","Item","eventKey","func","App","queryTerms","target","value","rows","urlString","String","url","success","searchResults","movieRows","forEach","poster_path","movieRow","push","concatMovies","error","xhr","status","err","reviews","rankScores","tempMovieRows","avgTitle","avgOverview","movieReviews","splitTitle","toLowerCase","split","splitOverview","splitTerms","splitDate","release_date","b","titleBM25","titleFreq","overviewBM25","overviewFreq","dateFreq","dateBM25","j","IDFtitle","IDFover","x","splitTitle2","p","replace","splitOverview2","includes","k","Math","sort","a","newMovieRows","fontSize","display","paddingTop","paddingBottom","paddingLeft","onChange","changeQuery","placeholder","searchChangeHandler","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"gVAgGeA,E,kDAnFb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CACXC,YAAa,8BAHC,E,gEAQdC,QAAQC,IAAI,YAEZ,IAAIC,EAAaC,KAAKN,MAAMO,MAAMC,MAElCL,QAAQC,IAAIC,GAEZ,IAAII,EAAW,CACb,OAAS,EACT,aAAe,EACf,IAAO,iFAAmFJ,EAAa,cACvG,OAAU,MACV,QAAW,CACT,kBAAmB,4DACnB,iBAAkB,uDAIlBK,EAAiB,GACrBC,IAAEC,KAAKH,GAAUI,KAAK,SAAUC,GAC9BX,QAAQC,IAAIU,GACZ,IAAMC,EAAUD,EAASC,QAEzB,GAAGA,EAAQC,OAAS,EAAE,CAEtBb,QAAQC,IAAIW,EAAQ,GAAGE,UAAU,GAAGC,cAEpC,IAAI,IAAIC,EAAE,EAAGA,EAAEJ,EAAQ,GAAGE,UAAUD,OAAQG,IAC1ChB,QAAQC,IAAIW,EAAQ,GAAGE,UAAUE,GAAGD,cACpCR,EAAiBA,EAAeU,OAAOL,EAAQ,GAAGE,UAAUE,GAAGD,cAE5DC,EAAE,EAAIJ,EAAQ,GAAGE,UAAUD,SAC5BN,EAAiBA,EAAeU,OAAO,OAK3CjB,QAAQC,IAAIM,GACZJ,KAAKe,SAAS,CAACnB,YAAaQ,MAG5BY,KAAKhB,S,+BAKL,OAAO,2BAAOiB,IAAKjB,KAAKN,MAAMO,MAAMiB,IACpC,+BACE,4BACE,4BACE,yBAAKC,IAAI,SAASC,MAAM,MAAMC,IAAKrB,KAAKN,MAAMO,MAAMqB,cAEtD,4BACE,yBAAKC,UAAU,cAAcC,MAAO,CAACC,UAAU,SAC/C,uBAAGC,MAAM,QAAQ1B,KAAKN,MAAMO,MAAMC,QAElC,yBAAKqB,UAAU,iBAAiBC,MAAO,CAACC,UAAU,SAClD,uBAAGC,MAAM,QAAQ1B,KAAKN,MAAMO,MAAM0B,WAElC,kBAACC,EAAA,EAAD,CAAgBC,QAAQ,QAAQC,UAAU,QAAQC,gBAAgB,QAAQC,QACxE,kBAACC,EAAA,EAAD,CAAST,MAAO,CAAEO,gBAAiB,QAASG,MAAO,QAASC,QAAS,MAAOjB,GAAG,iBAC/E,kBAACe,EAAA,EAAQG,MAAT,CAAeC,GAAG,MAAlB,gBACA,kBAACJ,EAAA,EAAQK,QAAT,KACGtC,KAAKL,MAAMC,eAId,kBAAC2C,EAAA,EAAD,CAAQC,QAAQ,UAAUhB,MAAO,CAACiB,MAAO,QAASC,QAAS1C,KAAK2C,kBAAkB3B,KAAKhB,OAAvF,2B,GA3EO4C,IAAMC,W,+BC0EdC,E,iLA5EQC,GACflD,QAAQC,IAAI,SACZD,QAAQC,IAAIiD,GACZ,IACMC,EAAaD,EACnBlD,QAAQC,IAAI,QACZD,QAAQC,IAAIkD,GAHQhD,KAIRiD,cAAcD,K,+BAGrB,IAAD,OACJ,OACA,kBAACE,EAAA,EAAD,CAAW3B,UAAU,mBAAmB4B,OAAO,GAC/C,kBAACC,EAAA,EAAD,CAAgBlC,GAAG,4BAA4BhB,MAAM,gBACrD,kBAACmD,EAAA,EAAD,CAAK9B,UAAU,+BACX,kBAAC+B,EAAA,EAASC,KAAV,CAAelB,GAAG,SAASmB,SAAS,KAAKd,QAAS,SAACK,GAAD,OAAW,EAAKrD,MAAM+D,KAAK,QAA7E,WAEJ,kBAACJ,EAAA,EAAD,CAAK9B,UAAU,+BACX,kBAAC+B,EAAA,EAASC,KAAV,CAAelB,GAAG,SAASmB,SAAS,KAAKd,QAAS,SAACK,GAAD,OAAW,EAAKrD,MAAM+D,KAAK,QAA7E,cAEJ,kBAACJ,EAAA,EAAD,CAAK9B,UAAU,+BACX,kBAAC+B,EAAA,EAASC,KAAV,CAAelB,GAAG,SAASmB,SAAS,KAAKd,QAAS,SAACK,GAAD,OAAW,EAAKrD,MAAM+D,KAAK,QAA7E,cAEJ,kBAACJ,EAAA,EAAD,CAAK9B,UAAU,+BACX,kBAAC+B,EAAA,EAASC,KAAV,CAAelB,GAAG,SAASmB,SAAS,KAAKd,QAAS,SAACK,GAAD,OAAW,EAAKrD,MAAM+D,KAAK,QAA7E,WAEJ,kBAACJ,EAAA,EAAD,CAAK9B,UAAU,+BACX,kBAAC+B,EAAA,EAASC,KAAV,CAAelB,GAAG,SAASmB,SAAS,KAAKd,QAAS,SAACK,GAAD,OAAW,EAAKrD,MAAM+D,KAAK,QAA7E,UAEJ,kBAACJ,EAAA,EAAD,CAAK9B,UAAU,+BACX,kBAAC+B,EAAA,EAASC,KAAV,CAAelB,GAAG,SAASmB,SAAS,KAAKd,QAAS,SAACK,GAAD,OAAW,EAAKrD,MAAM+D,KAAK,QAA7E,gBAEJ,kBAACJ,EAAA,EAAD,CAAK9B,UAAU,+BACX,kBAAC+B,EAAA,EAASC,KAAV,CAAelB,GAAG,SAASmB,SAAS,KAAKd,QAAS,SAACK,GAAD,OAAW,EAAKrD,MAAM+D,KAAK,QAA7E,UAEJ,kBAACJ,EAAA,EAAD,CAAK9B,UAAU,+BACX,kBAAC+B,EAAA,EAASC,KAAV,CAAelB,GAAG,SAASmB,SAAS,QAAQd,QAAS,SAACK,GAAD,OAAW,EAAKrD,MAAM+D,KAAK,WAAhF,WAEJ,kBAACJ,EAAA,EAAD,CAAK9B,UAAU,+BACX,kBAAC+B,EAAA,EAASC,KAAV,CAAelB,GAAG,SAASmB,SAAS,KAAKd,QAAS,SAACK,GAAD,OAAW,EAAKrD,MAAM+D,KAAK,QAA7E,YAEJ,kBAACJ,EAAA,EAAD,CAAK9B,UAAU,+BACX,kBAAC+B,EAAA,EAASC,KAAV,CAAelB,GAAG,SAASmB,SAAS,KAAKd,QAAS,SAACK,GAAD,OAAW,EAAKrD,MAAM+D,KAAK,QAA7E,YAEJ,kBAACJ,EAAA,EAAD,CAAK9B,UAAU,+BACX,kBAAC+B,EAAA,EAASC,KAAV,CAAelB,GAAG,SAASmB,SAAS,KAAKd,QAAS,SAACK,GAAD,OAAW,EAAKrD,MAAM+D,KAAK,QAA7E,WAEJ,kBAACJ,EAAA,EAAD,CAAK9B,UAAU,+BACX,kBAAC+B,EAAA,EAASC,KAAV,CAAelB,GAAG,SAASmB,SAAS,QAAQd,QAAS,SAACK,GAAD,OAAW,EAAKrD,MAAM+D,KAAK,WAAhF,UAEJ,kBAACJ,EAAA,EAAD,CAAK9B,UAAU,+BACX,kBAAC+B,EAAA,EAASC,KAAV,CAAelB,GAAG,SAASmB,SAAS,OAAOd,QAAS,SAACK,GAAD,OAAW,EAAKrD,MAAM+D,KAAK,UAA/E,YAEJ,kBAACJ,EAAA,EAAD,CAAK9B,UAAU,+BACX,kBAAC+B,EAAA,EAASC,KAAV,CAAelB,GAAG,SAASmB,SAAS,QAAQd,QAAS,SAACK,GAAD,OAAW,EAAKrD,MAAM+D,KAAK,WAAhF,YAEJ,kBAACJ,EAAA,EAAD,CAAK9B,UAAU,+BACX,kBAAC+B,EAAA,EAASC,KAAV,CAAelB,GAAG,SAASmB,SAAS,MAAMd,QAAS,SAACK,GAAD,OAAW,EAAKrD,MAAM+D,KAAK,SAA9E,oBAEJ,kBAACJ,EAAA,EAAD,CAAK9B,UAAU,+BACX,kBAAC+B,EAAA,EAASC,KAAV,CAAelB,GAAG,SAASmB,SAAS,QAAQd,QAAS,SAACK,GAAD,OAAW,EAAKrD,MAAM+D,KAAK,WAAhF,aAEJ,kBAACJ,EAAA,EAAD,CAAK9B,UAAU,+BACX,kBAAC+B,EAAA,EAASC,KAAV,CAAelB,GAAG,SAASmB,SAAS,KAAKd,QAAS,SAACK,GAAD,OAAW,EAAKrD,MAAM+D,KAAK,QAA7E,aAEJ,kBAACJ,EAAA,EAAD,CAAK9B,UAAU,+BACX,kBAAC+B,EAAA,EAASC,KAAV,CAAelB,GAAG,SAASmB,SAAS,QAAQd,QAAS,SAACK,GAAD,OAAW,EAAKrD,MAAM+D,KAAK,WAAhF,QAEJ,kBAACJ,EAAA,EAAD,CAAK9B,UAAU,+BACX,kBAAC+B,EAAA,EAASC,KAAV,CAAelB,GAAG,SAASmB,SAAS,KAAKd,QAAS,SAACK,GAAD,OAAW,EAAKrD,MAAM+D,KAAK,QAA7E,kB,GAtEiBb,IAAMC,WC6TpBa,E,kDA5Tb,WAAYhE,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,GAFG,E,wDAUNoD,GACV/C,KAAKe,SAAS,CAAC4C,WAAY,KAC3B,IAAIX,EAAaD,EAAMa,OAAOC,MAC9B7D,KAAKe,SAAS,CAAC4C,WAAYX,IAC3BnD,QAAQC,IAAIkD,K,oCAGAA,GAAY,IAAD,OACvBnD,QAAQC,IAAI,wBACZE,KAAKe,SAAS,CAAC+C,KAAM,KAErB,IAAI,IAAIjD,EAAE,EAAGA,EAAE,IAAKA,IAAI,CAGxB,IAAMkD,EAAY,oIAAsIC,OAAOnD,GAAK,gBAAkBmC,EAEtL3C,IAAEC,KAAK,CACL2D,IAAKF,EACLG,QAAS,SAACC,GAGR,IAAM1D,EAAU0D,EAAc1D,QAG1B2D,EAAY,GAChBA,EAAY,GAEZ3D,EAAQ4D,SAAQ,SAACpE,GACfA,EAAMqB,WAAa,kCAAoCrB,EAAMqE,YAE7D,IAAMC,EAAW,kBAAC,EAAD,CAAUtD,IAAKhB,EAAMiB,GAAIjB,MAAOA,IACjDmE,EAAUI,KAAKD,MAGjB,IACIE,EADa,EAAK9E,MAAMmE,KACEhD,OAAOsD,GAErC,EAAKrD,SAAS,CAAC+C,KAAMW,KAGvBC,MAAO,SAACC,EAAKC,EAAQC,GACnBhF,QAAQ6E,MAAM,qBACd7D,EAAI,U,0CAQUkC,GAClB/C,KAAKe,SAAS,CAAC+D,QAAS,MAGxB,IAAIC,EAAa,GACbC,EAAgB,GAEpBA,EAAgBhF,KAAKL,MAAMmE,KAQ3B,IALA,IAAImB,EAAW,EACXC,EAAc,EAGdC,EAAe,GACXtE,EAAE,EAAGA,EAAEmE,EAActE,OAAQG,IAAI,CACvCsE,EAAatE,GAAK,IAElBkE,EAAWlE,GAAK,CAACA,EAAG,GAIpBoE,IADIG,EADYpB,OAAOgB,EAAcnE,GAAGnB,MAAMO,MAAMC,MAAMmF,eAC/BC,MAAM,MACA5E,OAIjCwE,IADIK,EADevB,OAAOgB,EAAcnE,GAAGnB,MAAMO,MAAM0B,SAAS0D,eAC/BC,MAAM,MACG5E,OAGgBsD,OAAOgB,EAAcnE,GAAGnB,MAAMO,MAAMiB,IAsDhG+D,GAAsBD,EAActE,OACpCwE,GAA4BF,EAActE,OAI1C,IACI8E,EADaxF,KAAKL,MAAMgE,WACA2B,MAAM,KAWlC,IAAQzE,EAAE,EAAGA,EAAEmE,EAActE,OAAQG,IAAI,CAgCvC,IA9BA,IACIuE,EADYpB,OAAOgB,EAAcnE,GAAGnB,MAAMO,MAAMC,MAAMmF,eAC/BC,MAAM,KAG7BC,EADevB,OAAOgB,EAAcnE,GAAGnB,MAAMO,MAAM0B,SAAS0D,eAC/BC,MAAM,KAOnCG,EADWzB,OAAOgB,EAAcnE,GAAGnB,MAAMO,MAAMyF,cAC1BJ,MAAM,KAM3BK,EAAI,IAEJC,EAAY,EACZC,EAAY,EAEZC,EAAe,EACfC,EAAe,EAKfC,EAAW,EACXC,EAAW,EACPC,EAAE,EAAGA,EAAEV,EAAW9E,OAAQwF,IAAI,CAEpC,IAAIC,EAAW,EACXC,EAAU,EAEdP,EAAY,EACZE,EAAe,EACfC,EAAW,EAEX,IAAI,IAAIK,EAAE,EAAGA,EAAErB,EAActE,OAAQ2F,IAAI,CAGvC,IAFA,IACIC,EADatC,OAAOgB,EAAcqB,GAAG3G,MAAMO,MAAMC,MAAMmF,eAC9BC,MAAM,KAC3BiB,EAAE,EAAGA,EAAED,EAAY5F,OAAQ6F,IACjCD,EAAYC,GAAKD,EAAYC,GAAGC,QAAQ,SAAU,IAGpD,IACIC,EADgBzC,OAAOgB,EAAcqB,GAAG3G,MAAMO,MAAM0B,SAAS0D,eAC9BC,MAAM,KACzC,IAAQiB,EAAE,EAAGA,EAAEE,EAAe/F,OAAQ6F,IACpCE,EAAeF,GAAKE,EAAeF,GAAGC,QAAQ,SAAU,IAGvDF,EAAYI,SAASlB,EAAWU,MACjCC,GAAsB,GAErBM,EAAeC,SAASlB,EAAWU,MACpCE,GAAoB,GAKxB,IAAI,IAAIO,EAAE,EAAGA,EAAEvB,EAAW1E,OAAQiG,IAC7BnB,EAAWU,IAAMd,EAAWuB,GAAGH,QAAQ,SAAU,MAClDX,GAAwB,GAK5BD,GAAwBgB,KAAK9G,KAAKkF,EAActE,OAASyF,EAAW,KAAQA,EAAW,MAAmB,IAATN,GAAyBA,EApDnH,KAoDqI,IAAQF,GAAKP,EAAW1E,OAASuE,MAI7K,IAAQ0B,EAAE,EAAGA,EAAEpB,EAAc7E,OAAQiG,IAChCnB,EAAWU,IAAMX,EAAcoB,GAAGH,QAAQ,SAAU,MACrDT,GAA8B,GAKlCD,GAA8Bc,KAAK9G,KAAKkF,EAActE,OAAS0F,EAAU,KAAQA,EAAU,MAAsB,IAAZL,GAA4BA,EA/D1H,KA+D+I,IAAQJ,GAAKJ,EAAc7E,OAASwE,MAIvLO,EAAUiB,SAASlB,EAAWU,MAC/BF,GAAsB,GAExBC,GAAsBD,EAexBnG,QAAQC,IAAI,UACZD,QAAQC,IAAI8F,GACZ/F,QAAQC,IAAIgG,GACZjG,QAAQC,IAAImG,GACZlB,EAAWlE,GAAG,GAAkB,EAAZ+E,EAAmC,GAAfE,EAAkC,EAAXG,EAKjElB,EAAW8B,MAAK,SAASC,EAAGnB,GAAG,OAAOA,EAAE,GAAKmB,EAAE,MAC/CjH,QAAQC,IAAIiF,GAEZ,IAAIgC,EAAe,GACnB,IAAQlG,EAAE,EAAGA,EAAEkE,EAAWrE,OAAQG,IAChCkG,EAAalG,GAAKmE,EAAcD,EAAWlE,GAAG,IAGhDb,KAAKe,SAAS,CAAC+C,KAAMiD,M,+BAIvB,OACE,yBAAKxF,UAAU,OACb,2BAAOA,UAAU,YACf,+BACE,4BACE,wBAAIG,MAAM,UACR,iDAMR,kBAAC,EAAD,CAAgBH,UAAU,eAAekC,KAAMzD,KAAKiD,cAAcjC,KAAKhB,QAEvE,2BAAOwB,MAAO,CACZwF,SAAU,GACVC,QAAS,QACT7F,MAAO,MACP8F,WAAY,EACZC,cAAe,EACfC,YAAa,IACZC,SAAUrH,KAAKsH,YAAYtG,KAAKhB,MAAOuH,YAAY,6CAEtD,kBAAChF,EAAA,EAAD,CAAQF,GAAG,SAASmB,SAAS,MAAMd,QAAS1C,KAAKwH,oBAAoBxG,KAAKhB,OAA1E,UAECA,KAAKL,MAAMmE,U,GAtTAlB,IAAMC,WCGJ4E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,aAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA9D,GACL7E,QAAQ6E,MAAMA,EAAM+D,c","file":"static/js/main.1593276f.chunk.js","sourcesContent":["import React from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Popover from 'react-bootstrap/Popover'\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nimport Row from 'react-bootstrap/Row';\r\nimport {Divider} from 'semantic-ui-react'\r\n\r\nimport Dialog from 'react-bootstrap-dialog'\r\n\r\nimport $ from 'jquery';\r\n\r\nclass MovieRow extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      overlayText: \"couldn't find availability\"\r\n    }\r\n  }\r\n\r\n    setOverlayContent(){\r\n      console.log(\"changing\")\r\n\r\n      var movietitle = this.props.movie.title\r\n\r\n      console.log(movietitle)\r\n\r\n      var settings = {\r\n        \"async\": true,\r\n        \"crossDomain\": true,\r\n        \"url\": \"https://utelly-tv-shows-and-movies-availability-v1.p.rapidapi.com/lookup?term=\" + movietitle + \"&country=us\",\r\n        \"method\": \"GET\",\r\n        \"headers\": {\r\n          \"x-rapidapi-host\": \"utelly-tv-shows-and-movies-availability-v1.p.rapidapi.com\",\r\n          \"x-rapidapi-key\": \"60a773e6fcmsh09ae1d3175b315ep1daeb3jsn3eeef5c871af\"\r\n        }\r\n      }\r\n\r\n      var newOverlayText = \"\"\r\n      $.ajax(settings).done(function (response) {\r\n        console.log(response)\r\n        const results = response.results\r\n\r\n        if(results.length > 0){\r\n\r\n        console.log(results[0].locations[0].display_name)\r\n\r\n        for(var i=0; i<results[0].locations.length; i++){\r\n          console.log(results[0].locations[i].display_name);\r\n          newOverlayText = newOverlayText.concat(results[0].locations[i].display_name)\r\n\r\n          if(i+1 < results[0].locations.length){\r\n            newOverlayText = newOverlayText.concat(\", \")\r\n          }\r\n\r\n        }\r\n\r\n        console.log(newOverlayText)\r\n        this.setState({overlayText: newOverlayText})\r\n\r\n        }\r\n      }.bind(this))\r\n      \r\n    }\r\n\r\n    render(){\r\n        return <table key={this.props.movie.id}>\r\n        <tbody>\r\n          <tr>\r\n            <td>\r\n              <img alt=\"poster\" width=\"120\" src={this.props.movie.poster_src}/>\r\n            </td>\r\n            <td>\r\n              <div className=\"movie-title\" style={{textAlign:\"left\"}}>\r\n              <b align=\"left\">{this.props.movie.title}</b>\r\n              </div>\r\n              <div className=\"movie-overview\" style={{textAlign:\"left\"}}>\r\n              <p align=\"left\">{this.props.movie.overview}</p>\r\n              </div>\r\n              <OverlayTrigger trigger=\"click\" placement=\"right\" backgroundColor=\"black\" overlay={(\r\n                <Popover style={{ backgroundColor: \"black\", color: \"white\", opacity: \".8\"}} id=\"popover-basic\">\r\n                <Popover.Title as=\"h3\">Available at</Popover.Title>\r\n                <Popover.Content>\r\n                  {this.state.overlayText}\r\n                </Popover.Content>\r\n              </Popover>\r\n              )}>\r\n                <Button variant=\"success\" style={{float: \"left\"}} onClick={this.setOverlayContent.bind(this)}>Where to watch</Button>\r\n              </OverlayTrigger>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    }\r\n}\r\n\r\nexport default MovieRow","import React from 'react'\r\n\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\n\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nclass DropdownSelect extends React.Component{\r\n    genreSelectHandler(event){\r\n        console.log(\"event\")\r\n        console.log(event)\r\n        const boundObject = this\r\n        const searchTerm = event\r\n        console.log(\"term\")\r\n        console.log(searchTerm)\r\n        boundObject.performSearch(searchTerm)\r\n      }\r\n\r\n    render(){\r\n        return (\r\n        <Container className=\"ui centered py-2\" fluid={true}>\r\n        <DropdownButton id=\"dropdown-menu-align-right\" title=\"Choose Genre\">\r\n        <Row className=\"justify-content-center py-2\">\r\n            <Dropdown.Item as=\"button\" eventKey=\"28\" onClick={(event) => this.props.func(\"28\")}>Action</Dropdown.Item>\r\n        </Row>\r\n        <Row className=\"justify-content-center py-2\">\r\n            <Dropdown.Item as=\"button\" eventKey=\"12\" onClick={(event) => this.props.func(\"12\")}>Adventure</Dropdown.Item>\r\n        </Row>\r\n        <Row className=\"justify-content-center py-2\"> \r\n            <Dropdown.Item as=\"button\" eventKey=\"16\" onClick={(event) => this.props.func(\"16\")}>Animation</Dropdown.Item>\r\n        </Row>\r\n        <Row className=\"justify-content-center py-2\">  \r\n            <Dropdown.Item as=\"button\" eventKey=\"35\" onClick={(event) => this.props.func(\"35\")}>Comedy</Dropdown.Item>\r\n        </Row>\r\n        <Row className=\"justify-content-center py-2\">  \r\n            <Dropdown.Item as=\"button\" eventKey=\"80\" onClick={(event) => this.props.func(\"80\")}>Crime</Dropdown.Item>\r\n        </Row>\r\n        <Row className=\"justify-content-center py-2\">  \r\n            <Dropdown.Item as=\"button\" eventKey=\"99\" onClick={(event) => this.props.func(\"99\")}>Documentary</Dropdown.Item>\r\n        </Row>\r\n        <Row className=\"justify-content-center py-2\">  \r\n            <Dropdown.Item as=\"button\" eventKey=\"18\" onClick={(event) => this.props.func(\"18\")}>Drama</Dropdown.Item>\r\n        </Row>\r\n        <Row className=\"justify-content-center py-2\">  \r\n            <Dropdown.Item as=\"button\" eventKey=\"10751\" onClick={(event) => this.props.func(\"10751\")}>Family</Dropdown.Item>\r\n        </Row>\r\n        <Row className=\"justify-content-center py-2\">  \r\n            <Dropdown.Item as=\"button\" eventKey=\"14\" onClick={(event) => this.props.func(\"14\")}>Fantasy</Dropdown.Item>\r\n        </Row>\r\n        <Row className=\"justify-content-center py-2\">  \r\n            <Dropdown.Item as=\"button\" eventKey=\"36\" onClick={(event) => this.props.func(\"36\")}>History</Dropdown.Item>\r\n        </Row>\r\n        <Row className=\"justify-content-center py-2\">  \r\n            <Dropdown.Item as=\"button\" eventKey=\"27\" onClick={(event) => this.props.func(\"27\")}>Horror</Dropdown.Item>\r\n        </Row>\r\n        <Row className=\"justify-content-center py-2\">  \r\n            <Dropdown.Item as=\"button\" eventKey=\"10402\" onClick={(event) => this.props.func(\"10402\")}>Music</Dropdown.Item>\r\n        </Row>\r\n        <Row className=\"justify-content-center py-2\">  \r\n            <Dropdown.Item as=\"button\" eventKey=\"9648\" onClick={(event) => this.props.func(\"9648\")}>Mystery</Dropdown.Item>\r\n        </Row>\r\n        <Row className=\"justify-content-center py-2\">  \r\n            <Dropdown.Item as=\"button\" eventKey=\"10749\" onClick={(event) => this.props.func(\"10749\")}>Romance</Dropdown.Item>\r\n        </Row>\r\n        <Row className=\"justify-content-center py-2\">  \r\n            <Dropdown.Item as=\"button\" eventKey=\"878\" onClick={(event) => this.props.func(\"878\")}>Science Fiction</Dropdown.Item>\r\n        </Row>\r\n        <Row className=\"justify-content-center py-2\">  \r\n            <Dropdown.Item as=\"button\" eventKey=\"10770\" onClick={(event) => this.props.func(\"10770\")}>TV Movie</Dropdown.Item>\r\n        </Row>\r\n        <Row className=\"justify-content-center py-2\">  \r\n            <Dropdown.Item as=\"button\" eventKey=\"53\" onClick={(event) => this.props.func(\"53\")}>Thriller</Dropdown.Item>\r\n        </Row>\r\n        <Row className=\"justify-content-center py-2\">  \r\n            <Dropdown.Item as=\"button\" eventKey=\"10752\" onClick={(event) => this.props.func(\"10752\")}>War</Dropdown.Item>\r\n        </Row>\r\n        <Row className=\"justify-content-center py-2\">  \r\n            <Dropdown.Item as=\"button\" eventKey=\"37\" onClick={(event) => this.props.func(\"37\")}>Western</Dropdown.Item>\r\n        </Row>\r\n        </DropdownButton>\r\n        </Container>\r\n    )}\r\n}\r\n\r\nexport default DropdownSelect","import React, {Component} from 'react';\n\nimport './App.css';\nimport MovieRow from './MovieRow.js';\nimport $ from 'jquery';\n\nimport DropdownSelect from './components/DropdownSelect';\nimport Button from 'react-bootstrap/Button'\n\nclass App extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {}\n  }\n/*\n  componentDidMount(){\n    // For initial data\n    this.performSearch(\"\");\n  }*/\n  \n  changeQuery(event){\n    this.setState({queryTerms: \"\"})\n    var searchTerm = event.target.value\n    this.setState({queryTerms: searchTerm})\n    console.log(searchTerm)\n  }\n\n  performSearch(searchTerm){\n    console.log(\"searching for movies\")  \n    this.setState({rows: []})\n\n    for(var i=1; i<101; i++){\n\n    //console.log(searchTerm)\n    const urlString = \"https://api.themoviedb.org/3/discover/movie?api_key=fa53fe2bb3cc3e01ec7cefe7e16aa1a2&language=en-US&sort_by=popularity.desc&page=\" + String(i) + \"&with_genres=\" + searchTerm\n    //console.log(urlString)\n    $.ajax({\n      url: urlString,\n      success: (searchResults) => {\n        //console.log(\"data fetch success\")\n        //console.log(searchResults)\n        const results = searchResults.results\n        //console.log(results[0])\n\n        var movieRows = []\n        movieRows = []\n\n        results.forEach((movie) => {\n          movie.poster_src = \"https://image.tmdb.org/t/p/w185\" + movie.poster_path\n          //console.log(movie.title)\n          const movieRow = <MovieRow key={movie.id} movie={movie}/>\n          movieRows.push(movieRow)\n        })\n\n        var currMovies = this.state.rows\n        var concatMovies = currMovies.concat(movieRows)\n\n        this.setState({rows: concatMovies})\n       \n      },\n      error: (xhr, status, err) => {\n        console.error(\"failed fetch data\")\n        i = 1000\n      }\n     })\n\n    }\n\n  }\n\n  searchChangeHandler(event){\n    this.setState({reviews: \" \"})\n\n    // reorder based on keywords\n    var rankScores = []\n    var tempMovieRows = []\n    //this may just be a copy by reference NEED VALUE\n    tempMovieRows = this.state.rows\n    //index of movie in array with cooresponding score initialized to 0\n    //get avg length of title, overview, review\n    var avgTitle = 0\n    var avgOverview = 0\n    \n    var avgReview = 0\n    var movieReviews = []\n    for(var i=0; i<tempMovieRows.length; i++){\n      movieReviews[i] = \" \"\n\n      rankScores[i] = [i, 0]\n\n      var tempTitle = String(tempMovieRows[i].props.movie.title.toLowerCase())\n      var splitTitle = tempTitle.split(\" \");\n      avgTitle = avgTitle + splitTitle.length\n\n      var tempOverview = String(tempMovieRows[i].props.movie.overview.toLowerCase())\n      var splitOverview = tempOverview.split(\" \");\n      avgOverview = avgOverview + splitOverview.length\n\n      //getting movie reviews\n      const urlString = \"https://api.themoviedb.org/3/movie/\" + String(tempMovieRows[i].props.movie.id) + \"/reviews?api_key=fa53fe2bb3cc3e01ec7cefe7e16aa1a2&language=en-US&page=1\"\n      \n      /*$.ajax({\n        url: urlString,\n        success: (searchResults) => {\n          const results = searchResults.results\n          //console.log(results)\n          /*\n          for(var j=0; j<results.length; j++){\n            var tempReview = String(results[j].content.toLowerCase())\n            var splitReview = tempReview.split(\" \");\n            //console.log(tempReview)\n            var allReviews = movieReviews[i]\n            movieReviews[i] = allReviews + \" \" + tempReview\n            console.log(movieReviews[i])\n            console.log(movieReviews)\n            avgReview = avgReview + splitReview.length\n          }\n          */\n         /*\n          if(results.length>0){\n          var tempReview = String(results[0].content.toLowerCase())\n          var splitReview = tempReview.split(\" \")\n          movieReviews[i] = tempReview\n          avgReview = avgReview + splitReview.length\n          }\n          */ /*\n          var tempReview1 = \"\"\n          //var tempReview = \"\"\n          results.forEach((review) => {\n            console.log(review.content)\n            const tempReview = String(review.content.toLowerCase())\n            tempReview1 = tempReview1 + \" \" + tempReview\n            //var splitReview = tempReview.split(\" \")\n            //movieReviews[i] = movieReviews[i] + \" \" + tempReview\n            //avgReview = avgReview + splitReview.length\n          })\n          //console.log(tempReview1)\n          this.setState({reviews: tempReview1})\n        },\n        error: (xhr, status, err) => {\n          console.error(\"failed fetch data\")\n        }\n       })\n\n       movieReviews[i] = this.state.reviews\n       console.log(\"state check\")\n       console.log(this.state.reviews)\n       */\n       //date???????\n    }\n    //console.log(\"reviews\")\n    //console.log(movieReviews)\n\n    avgTitle = avgTitle / tempMovieRows.length\n    avgOverview = avgOverview / tempMovieRows.length\n    //avgReview = avgReview / tempMovieRows.length\n\n    //var searchTerm = event.target.value\n    var searchTerm = this.state.queryTerms\n    var splitTerms = searchTerm.split(\" \");\n    //may need to add things like word form standardization\n    //or removing multiple of same word in query\n    /*\n    for(var i=0; i<splitTerms.length; i++){\n      console.log(splitTerms[i].toLowerCase())\n    }\n    */\n\n    //console.log(tempMovieRows.length)\n    //console.log(tempMovieRows)\n    for(var i=0; i<tempMovieRows.length; i++){\n      //rankScores[i] = [i, 0]\n      var tempTitle = String(tempMovieRows[i].props.movie.title.toLowerCase())\n      var splitTitle = tempTitle.split(\" \");\n\n      var tempOverview = String(tempMovieRows[i].props.movie.overview.toLowerCase())\n      var splitOverview = tempOverview.split(\" \");\n\n\n      //var tempReview = String(movieReviews[i])\n      //var splitReview = tempReview.split(\" \");\n\n      var tempDate = String(tempMovieRows[i].props.movie.release_date)\n      var splitDate = tempDate.split(\"-\");\n\n      //console.log(splitDate)\n      //console.log(tempTitle)\n\n      var k1 = 1.2\n      var b = 0.75\n\n      var titleBM25 = 0.0\n      var titleFreq = 0.0\n\n      var overviewBM25 = 0.0\n      var overviewFreq = 0.0\n\n      //var reviewsFreq = 0.0\n      //var reviewsBM25 = 0.0\n\n      var dateFreq = 0.0\n      var dateBM25 = 0.0\n      for(var j=0; j<splitTerms.length; j++){\n        //IDF\n        var IDFtitle = 0.0\n        var IDFover = 0.0\n\n        titleFreq = 0.0\n        overviewFreq = 0.0\n        dateFreq = 0.0\n\n        for(var x=0; x<tempMovieRows.length; x++){\n          var tempTitle2 = String(tempMovieRows[x].props.movie.title.toLowerCase())\n          var splitTitle2 = tempTitle2.split(\" \");\n          for(var p=0; p<splitTitle2.length; p++){\n            splitTitle2[p] = splitTitle2[p].replace(/[,.:]/g, '')\n          }\n\n          var tempOverview2 = String(tempMovieRows[x].props.movie.overview.toLowerCase())\n          var splitOverview2 = tempOverview2.split(\" \");\n          for(var p=0; p<splitOverview2.length; p++){\n            splitOverview2[p] = splitOverview2[p].replace(/[,.:]/g, '')\n          }\n\n          if(splitTitle2.includes(splitTerms[j])){\n            IDFtitle = IDFtitle + 1\n          }\n          if(splitOverview2.includes(splitTerms[j])){\n            IDFover = IDFover + 1\n          }\n        }\n\n\n        for(var k=0; k<splitTitle.length; k++){\n          if(splitTerms[j] == splitTitle[k].replace(/[,.:]/g, '')){\n            titleFreq = titleFreq + 1\n          }\n        }\n        //need to include IDF part\n        //titleBM25 = titleBM25 + ((titleFreq * (k1 + 1)) / (titleFreq + k1 * (1 - b + b * (splitTitle.length / avgTitle))))\n        titleBM25 = titleBM25 + Math.log((tempMovieRows.length - IDFtitle + 0.5) / (IDFtitle + 0.5)) * ((titleFreq * (k1 + 1)) / (titleFreq + k1 * (1 - b + b * (splitTitle.length / avgTitle))))\n        //console.log(\"title\")\n        //console.log(titleBM25)\n\n        for(var k=0; k<splitOverview.length; k++){\n          if(splitTerms[j] == splitOverview[k].replace(/[,.:]/g, '')){\n            overviewFreq = overviewFreq + 1\n          }\n        }\n        //need to include IDF part\n        //overviewBM25 = overviewBM25 + ((overviewFreq * (k1 + 1)) / (overviewFreq + k1 * (1 - b + b * (splitOverview.length / avgOverview))))\n        overviewBM25 = overviewBM25 + Math.log((tempMovieRows.length - IDFover + 0.5) / (IDFover + 0.5)) * ((overviewFreq * (k1 + 1)) / (overviewFreq + k1 * (1 - b + b * (splitOverview.length / avgOverview))))\n        //console.log(\"overview\")\n        //console.log(overviewBM25)\n\n        if(splitDate.includes(splitTerms[j])){\n          dateFreq = dateFreq + 1\n        }\n        dateBM25 = dateBM25 + dateFreq\n\n        /*\n        for(var k=0; k<splitReview.length; k++){\n            if(splitTerms[j] == splitReview[k].replace(/[,.:]/g, '')){\n              reviewsFreq = reviewsFreq + 1\n            }\n        }\n        //need to include IDF part\n        reviewsBM25 = reviewsBM25 + ((reviewsFreq * (k1 + 1)) / (reviewsFreq + k1 * (1 - b + b * (splitReview.length / avgReview))))\n        console.log(tempReview)\n        console.log(reviewsBM25) */\n      }\n\n      //rankScores[i][1] = (titleBM25 * 1.0) + (overviewBM25 * 0.3) + (reviewsBM25 * 0.3)\n      console.log(\"scores\")\n      console.log(titleBM25)\n      console.log(overviewBM25)\n      console.log(dateBM25)\n      rankScores[i][1] = (titleBM25 * 1.0) + (overviewBM25 * 0.3) + (dateBM25 * 1.0)\n      //console.log(titleFreq + (overviewFreq * 0.1))\n      //console.log(rankScores[i])\n    }\n\n    rankScores.sort(function(a, b){return b[1] - a[1]});\n    console.log(rankScores)\n\n    var newMovieRows = []\n    for(var i=0; i<rankScores.length; i++){\n      newMovieRows[i] = tempMovieRows[rankScores[i][0]]\n    }\n\n    this.setState({rows: newMovieRows})\n  }\n\nrender(){\n  return (\n    <div className=\"App\">\n      <table className=\"titleBar\">\n        <tbody>\n          <tr>\n            <td align=\"center\">\n              <h1>Find My Movie</h1>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n\n      <DropdownSelect className=\"categoryDrop\" func={this.performSearch.bind(this)}/>\n      \n      <input style={{\n        fontSize: 20,\n        display: 'block',\n        width: \"99%\",\n        paddingTop: 8,\n        paddingBottom: 8,\n        paddingLeft: 16\n      }} onChange={this.changeQuery.bind(this)} placeholder=\"Enter title, release year, keywords etc.\"/>\n\n      <Button as=\"button\" eventKey=\"100\" onClick={this.searchChangeHandler.bind(this)}>Search</Button>\n\n      {this.state.rows}\n\n    </div>\n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}